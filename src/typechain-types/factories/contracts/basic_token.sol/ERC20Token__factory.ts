/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../contracts/basic_token.sol/ERC20Token";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burnNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenToMint",
        type: "uint256",
      },
    ],
    name: "mintToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puaseContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unPuaseContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506128de806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637e77c503116100ad578063a9059cbb11610071578063a9059cbb14610321578063adee53b914610351578063c77b6dfd1461035b578063dd62ed3e14610377578063f2fde38b146103a75761012c565b80637e77c5031461028f5780638c25321a146102ab5780638da5cb5b146102b557806395d89b41146102d3578063a457c2d7146102f15761012c565b806339509351116100f457806339509351146101eb5780635c975abb1461021b57806370a0823114610239578063715018a61461026957806379c65068146102735761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017f57806323b872dd1461019d578063313ce567146101cd575b600080fd5b6101396103c3565b6040516101469190611ec4565b60405180910390f35b61016960048036038101906101649190611a90565b610455565b6040516101769190611e8e565b60405180910390f35b610187610478565b6040516101949190612106565b60405180910390f35b6101b760048036038101906101b29190611a41565b610482565b6040516101c49190611e8e565b60405180910390f35b6101d56104b1565b6040516101e29190612121565b60405180910390f35b61020560048036038101906102009190611a90565b6104ba565b6040516102129190611e8e565b60405180910390f35b6102236104f1565b6040516102309190611e8e565b60405180910390f35b610253600480360381019061024e91906119dc565b610508565b6040516102609190612106565b60405180910390f35b610271610551565b005b61028d60048036038101906102889190611a90565b6105d9565b005b6102a960048036038101906102a49190611af5565b610791565b005b6102b3610880565b005b6102bd610906565b6040516102ca9190611e73565b60405180910390f35b6102db610930565b6040516102e89190611ec4565b60405180910390f35b61030b60048036038101906103069190611a90565b6109c2565b6040516103189190611e8e565b60405180910390f35b61033b60048036038101906103369190611a90565b610a39565b6040516103489190611e8e565b60405180910390f35b610359610a5c565b005b61037560048036038101906103709190611a90565b610ae2565b005b610391600480360381019061038c9190611a05565b610af0565b60405161039e9190612106565b60405180910390f35b6103c160048036038101906103bc91906119dc565b610b77565b005b6060603680546103d2906122e1565b80601f01602080910402602001604051908101604052809291908181526020018280546103fe906122e1565b801561044b5780601f106104205761010080835404028352916020019161044b565b820191906000526020600020905b81548152906001019060200180831161042e57829003601f168201915b5050505050905090565b600080610460610c6f565b905061046d818585610c77565b600191505092915050565b6000603554905090565b60008061048d610c6f565b905061049a858285610e42565b6104a5858585610ece565b60019150509392505050565b60006012905090565b6000806104c5610c6f565b90506104e68185856104d78589610af0565b6104e191906121ae565b610c77565b600191505092915050565b6000609760009054906101000a900460ff16905090565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610559610c6f565b73ffffffffffffffffffffffffffffffffffffffff16610577610906565b73ffffffffffffffffffffffffffffffffffffffff16146105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490612026565b60405180910390fd5b6105d76000611152565b565b6105e1610c6f565b73ffffffffffffffffffffffffffffffffffffffff166105ff610906565b73ffffffffffffffffffffffffffffffffffffffff1614610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90612026565b60405180910390fd5b6001151560c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312c4daf16040518163ffffffff1660e01b815260040160206040518083038186803b1580156106c157600080fd5b505afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190611acc565b15151461073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290611f86565b60405180910390fd5b6107436104f1565b15610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90611fe6565b60405180910390fd5b61078d8282611218565b5050565b600061079d6001611379565b905080156107c1576001600060016101000a81548160ff0219169083151502179055505b8160c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061080c8686611469565b61081583611152565b61081f8385611218565b80156108785760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161086f9190611ea9565b60405180910390a15b505050505050565b610888610c6f565b73ffffffffffffffffffffffffffffffffffffffff166108a6610906565b73ffffffffffffffffffffffffffffffffffffffff16146108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f390612026565b60405180910390fd5b6109046114c6565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606037805461093f906122e1565b80601f016020809104026020016040519081016040528092919081815260200182805461096b906122e1565b80156109b85780601f1061098d576101008083540402835291602001916109b8565b820191906000526020600020905b81548152906001019060200180831161099b57829003601f168201915b5050505050905090565b6000806109cd610c6f565b905060006109db8286610af0565b905083811015610a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a17906120c6565b60405180910390fd5b610a2d8286868403610c77565b60019250505092915050565b600080610a44610c6f565b9050610a51818585610ece565b600191505092915050565b610a64610c6f565b73ffffffffffffffffffffffffffffffffffffffff16610a82610906565b73ffffffffffffffffffffffffffffffffffffffff1614610ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acf90612026565b60405180910390fd5b610ae0611569565b565b610aec828261160b565b5050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b7f610c6f565b73ffffffffffffffffffffffffffffffffffffffff16610b9d610906565b73ffffffffffffffffffffffffffffffffffffffff1614610bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bea90612026565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5a90611f46565b60405180910390fd5b610c6c81611152565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde90612086565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e90611f66565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e359190612106565b60405180910390a3505050565b6000610e4e8484610af0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ec85781811015610eba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb190611fa6565b60405180910390fd5b610ec78484848403610c77565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3590612066565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa590611ee6565b60405180910390fd5b610fb98383836117e4565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611040576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103790611fc6565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110d591906121ae565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111399190612106565b60405180910390a361114c8484846117e9565b50505050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127f906120e6565b60405180910390fd5b611294600083836117e4565b80603560008282546112a691906121ae565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112fc91906121ae565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113619190612106565b60405180910390a3611375600083836117e9565b5050565b60008060019054906101000a900460ff16156113f05760018260ff161480156113a857506113a6306117ee565b155b6113e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113de90612006565b60405180910390fd5b60009050611464565b8160ff1660008054906101000a900460ff1660ff1610611445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143c90612006565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff166114b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114af906120a6565b60405180910390fd5b6114c28282611811565b5050565b6114ce6104f1565b1561150e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150590611fe6565b60405180910390fd5b6001609760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611552610c6f565b60405161155f9190611e73565b60405180910390a1565b6115716104f1565b6115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a790611f06565b60405180910390fd5b6000609760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115f4610c6f565b6040516116019190611e73565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561167b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167290612046565b60405180910390fd5b611687826000836117e4565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561170e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170590611f26565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603560008282546117669190612204565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117cb9190612106565b60405180910390a36117df836000846117e9565b505050565b505050565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611860576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611857906120a6565b60405180910390fd5b8160369080519060200190611876929190611892565b50806037908051906020019061188d929190611892565b505050565b82805461189e906122e1565b90600052602060002090601f0160209004810192826118c05760008555611907565b82601f106118d957805160ff1916838001178555611907565b82800160010185558215611907579182015b828111156119065782518255916020019190600101906118eb565b5b5090506119149190611918565b5090565b5b80821115611931576000816000905550600101611919565b5090565b600061194861194384612161565b61213c565b90508281526020810184848401111561196057600080fd5b61196b84828561229f565b509392505050565b60008135905061198281612863565b92915050565b6000815190506119978161287a565b92915050565b600082601f8301126119ae57600080fd5b81356119be848260208601611935565b91505092915050565b6000813590506119d681612891565b92915050565b6000602082840312156119ee57600080fd5b60006119fc84828501611973565b91505092915050565b60008060408385031215611a1857600080fd5b6000611a2685828601611973565b9250506020611a3785828601611973565b9150509250929050565b600080600060608486031215611a5657600080fd5b6000611a6486828701611973565b9350506020611a7586828701611973565b9250506040611a86868287016119c7565b9150509250925092565b60008060408385031215611aa357600080fd5b6000611ab185828601611973565b9250506020611ac2858286016119c7565b9150509250929050565b600060208284031215611ade57600080fd5b6000611aec84828501611988565b91505092915050565b600080600080600060a08688031215611b0d57600080fd5b600086013567ffffffffffffffff811115611b2757600080fd5b611b338882890161199d565b955050602086013567ffffffffffffffff811115611b5057600080fd5b611b5c8882890161199d565b9450506040611b6d888289016119c7565b9350506060611b7e88828901611973565b9250506080611b8f88828901611973565b9150509295509295909350565b611ba581612238565b82525050565b611bb48161224a565b82525050565b611bc38161228d565b82525050565b6000611bd482612192565b611bde818561219d565b9350611bee8185602086016122ae565b611bf7816123d1565b840191505092915050565b6000611c0f60238361219d565b9150611c1a826123e2565b604082019050919050565b6000611c3260148361219d565b9150611c3d82612431565b602082019050919050565b6000611c5560228361219d565b9150611c608261245a565b604082019050919050565b6000611c7860268361219d565b9150611c83826124a9565b604082019050919050565b6000611c9b60228361219d565b9150611ca6826124f8565b604082019050919050565b6000611cbe60278361219d565b9150611cc982612547565b604082019050919050565b6000611ce1601d8361219d565b9150611cec82612596565b602082019050919050565b6000611d0460268361219d565b9150611d0f826125bf565b604082019050919050565b6000611d2760108361219d565b9150611d328261260e565b602082019050919050565b6000611d4a602e8361219d565b9150611d5582612637565b604082019050919050565b6000611d6d60208361219d565b9150611d7882612686565b602082019050919050565b6000611d9060218361219d565b9150611d9b826126af565b604082019050919050565b6000611db360258361219d565b9150611dbe826126fe565b604082019050919050565b6000611dd660248361219d565b9150611de18261274d565b604082019050919050565b6000611df9602b8361219d565b9150611e048261279c565b604082019050919050565b6000611e1c60258361219d565b9150611e27826127eb565b604082019050919050565b6000611e3f601f8361219d565b9150611e4a8261283a565b602082019050919050565b611e5e81612276565b82525050565b611e6d81612280565b82525050565b6000602082019050611e886000830184611b9c565b92915050565b6000602082019050611ea36000830184611bab565b92915050565b6000602082019050611ebe6000830184611bba565b92915050565b60006020820190508181036000830152611ede8184611bc9565b905092915050565b60006020820190508181036000830152611eff81611c02565b9050919050565b60006020820190508181036000830152611f1f81611c25565b9050919050565b60006020820190508181036000830152611f3f81611c48565b9050919050565b60006020820190508181036000830152611f5f81611c6b565b9050919050565b60006020820190508181036000830152611f7f81611c8e565b9050919050565b60006020820190508181036000830152611f9f81611cb1565b9050919050565b60006020820190508181036000830152611fbf81611cd4565b9050919050565b60006020820190508181036000830152611fdf81611cf7565b9050919050565b60006020820190508181036000830152611fff81611d1a565b9050919050565b6000602082019050818103600083015261201f81611d3d565b9050919050565b6000602082019050818103600083015261203f81611d60565b9050919050565b6000602082019050818103600083015261205f81611d83565b9050919050565b6000602082019050818103600083015261207f81611da6565b9050919050565b6000602082019050818103600083015261209f81611dc9565b9050919050565b600060208201905081810360008301526120bf81611dec565b9050919050565b600060208201905081810360008301526120df81611e0f565b9050919050565b600060208201905081810360008301526120ff81611e32565b9050919050565b600060208201905061211b6000830184611e55565b92915050565b60006020820190506121366000830184611e64565b92915050565b6000612146612157565b90506121528282612313565b919050565b6000604051905090565b600067ffffffffffffffff82111561217c5761217b6123a2565b5b612185826123d1565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006121b982612276565b91506121c483612276565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121f9576121f8612344565b5b828201905092915050565b600061220f82612276565b915061221a83612276565b92508282101561222d5761222c612344565b5b828203905092915050565b600061224382612256565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061229882612280565b9050919050565b82818337600083830152505050565b60005b838110156122cc5780820151818401526020810190506122b1565b838111156122db576000848401525b50505050565b600060028204905060018216806122f957607f821691505b6020821081141561230d5761230c612373565b5b50919050565b61231c826123d1565b810181811067ffffffffffffffff8211171561233b5761233a6123a2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f416c6c506175736561626c653a20416c6c20636f6e747261637473206172652060008201527f7061757365642e00000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61286c81612238565b811461287757600080fd5b50565b6128838161224a565b811461288e57600080fd5b50565b61289a81612276565b81146128a557600080fd5b5056fea2646970667358221220e356abe187320b5f82b0237793a39fb3e19d90fa337fc926c1bf229b58b9513164736f6c63430008040033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Token> {
    return super.deploy(overrides || {}) as Promise<ERC20Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  override connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
