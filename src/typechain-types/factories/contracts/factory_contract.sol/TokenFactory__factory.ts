/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenFactory,
  TokenFactoryInterface,
} from "../../../contracts/factory_contract.sol/TokenFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftaddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc20address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "AllContractsPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc20Address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeStamp",
        type: "uint256",
      },
    ],
    name: "ContractPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc20Address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC20Created",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "NftCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "createNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    name: "createToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPauseAllStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "pauseERC20Contract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "setPauseAllStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "superERC20TokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "superNftTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001633380380620016338339818101604052810190620000379190620001df565b620000576200004b620000fc60201b60201c565b6200010460201b60201c565b6001600560146101000a81548160ff02191690831515021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200026e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001d98162000254565b92915050565b60008060408385031215620001f357600080fd5b60006200020385828601620001c8565b92505060206200021685828601620001c8565b9150509250929050565b60006200022d8262000234565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200025f8162000220565b81146200026b57600080fd5b50565b6113b5806200027e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806395214a171161006657806395214a1714610121578063b91827d11461013d578063c6e386fa14610159578063e9daeaeb14610177578063f2fde38b146101955761009e565b806312c4daf1146100a35780635b060530146100c157806368613d17146100dd578063715018a6146100f95780638da5cb5b14610103575b600080fd5b6100ab6101b1565b6040516100b89190610fed565b60405180910390f35b6100db60048036038101906100d69190610dd1565b6101c8565b005b6100f760048036038101906100f29190610d65565b61032f565b005b610101610493565b005b61010b61051b565b6040516101189190610f1f565b60405180910390f35b61013b60048036038101906101369190610d13565b610544565b005b61015760048036038101906101529190610d3c565b610662565b005b6101616106fb565b60405161016e9190610f1f565b60405180910390f35b61017f610721565b60405161018c9190610f1f565b60405180910390f35b6101af60048036038101906101aa9190610d13565b610747565b005b6000600560149054906101000a900460ff16905090565b60006101f5600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661083f565b905060008190508073ffffffffffffffffffffffffffffffffffffffff16637e77c50386868633306040518663ffffffff1660e01b815260040161023d959493929190611008565b600060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b505050506006819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102dc8233610914565b7fc36c445fe8cb1290f2261cbe3e9c7554a67142c9c88dbc164a6627fd7a81711d82336001600680549050610311919061113b565b60405161032093929190610f3a565b60405180910390a15050505050565b600061035c600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661083f565b905060008190508073ffffffffffffffffffffffffffffffffffffffff1663613d25bb338686306040518563ffffffff1660e01b81526004016103a29493929190610f71565b600060405180830381600087803b1580156103bc57600080fd5b505af11580156103d0573d6000803e3d6000fd5b505050506007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104418233610a59565b7f4419c05c84e3cb8de84726cdaeba72711dd2766f53ebd2ce4da55f87ab5e12e882336001600780549050610476919061113b565b60405161048593929190610f3a565b60405180910390a150505050565b61049b610ba0565b73ffffffffffffffffffffffffffffffffffffffff166104b961051b565b73ffffffffffffffffffffffffffffffffffffffff161461050f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610506906110a9565b60405180910390fd5b6105196000610ba8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61054c610ba0565b73ffffffffffffffffffffffffffffffffffffffff1661056a61051b565b73ffffffffffffffffffffffffffffffffffffffff16146105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b7906110a9565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff16638c25321a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505050507f80170b5fcdd2bf1e0660ef4b8851f86685f64d41b1a19de1471947ece8725aac8242604051610656929190610fc4565b60405180910390a15050565b61066a610ba0565b73ffffffffffffffffffffffffffffffffffffffff1661068861051b565b73ffffffffffffffffffffffffffffffffffffffff16146106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d5906110a9565b60405180910390fd5b80600560146101000a81548160ff02191690831515021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61074f610ba0565b73ffffffffffffffffffffffffffffffffffffffff1661076d61051b565b73ffffffffffffffffffffffffffffffffffffffff16146107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba906110a9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90611069565b60405180910390fd5b61083c81610ba8565b50565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561090f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090690611089565b60405180910390fd5b919050565b60018081600181540180825580915050039060005260206000200160009054906101000a90505060006001808054905061094e919061113b565b9050826001828154811061098b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6002600181600181540180825580915050039060005260206000200160009054906101000a90505060006001600280549050610a95919061113b565b90508260028281548110610ad2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610c7f610c7a846110ee565b6110c9565b905082815260208101848484011115610c9757600080fd5b610ca28482856111b7565b509392505050565b600081359050610cb98161133a565b92915050565b600081359050610cce81611351565b92915050565b600082601f830112610ce557600080fd5b8135610cf5848260208601610c6c565b91505092915050565b600081359050610d0d81611368565b92915050565b600060208284031215610d2557600080fd5b6000610d3384828501610caa565b91505092915050565b600060208284031215610d4e57600080fd5b6000610d5c84828501610cbf565b91505092915050565b60008060408385031215610d7857600080fd5b600083013567ffffffffffffffff811115610d9257600080fd5b610d9e85828601610cd4565b925050602083013567ffffffffffffffff811115610dbb57600080fd5b610dc785828601610cd4565b9150509250929050565b600080600060608486031215610de657600080fd5b600084013567ffffffffffffffff811115610e0057600080fd5b610e0c86828701610cd4565b935050602084013567ffffffffffffffff811115610e2957600080fd5b610e3586828701610cd4565b9250506040610e4686828701610cfe565b9150509250925092565b610e598161116f565b82525050565b610e6881611181565b82525050565b6000610e798261111f565b610e83818561112a565b9350610e938185602086016111c6565b610e9c81611288565b840191505092915050565b6000610eb460268361112a565b9150610ebf82611299565b604082019050919050565b6000610ed760168361112a565b9150610ee2826112e8565b602082019050919050565b6000610efa60208361112a565b9150610f0582611311565b602082019050919050565b610f19816111ad565b82525050565b6000602082019050610f346000830184610e50565b92915050565b6000606082019050610f4f6000830186610e50565b610f5c6020830185610e50565b610f696040830184610f10565b949350505050565b6000608082019050610f866000830187610e50565b8181036020830152610f988186610e6e565b90508181036040830152610fac8185610e6e565b9050610fbb6060830184610e50565b95945050505050565b6000604082019050610fd96000830185610e50565b610fe66020830184610f10565b9392505050565b60006020820190506110026000830184610e5f565b92915050565b600060a08201905081810360008301526110228188610e6e565b905081810360208301526110368187610e6e565b90506110456040830186610f10565b6110526060830185610e50565b61105f6080830184610e50565b9695505050505050565b6000602082019050818103600083015261108281610ea7565b9050919050565b600060208201905081810360008301526110a281610eca565b9050919050565b600060208201905081810360008301526110c281610eed565b9050919050565b60006110d36110e4565b90506110df82826111f9565b919050565b6000604051905090565b600067ffffffffffffffff82111561110957611108611259565b5b61111282611288565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611146826111ad565b9150611151836111ad565b9250828210156111645761116361122a565b5b828203905092915050565b600061117a8261118d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111e45780820151818401526020810190506111c9565b838111156111f3576000848401525b50505050565b61120282611288565b810181811067ffffffffffffffff8211171561122157611220611259565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6113438161116f565b811461134e57600080fd5b50565b61135a81611181565b811461136557600080fd5b50565b611371816111ad565b811461137c57600080fd5b5056fea264697066735822122089e96e88ec77daa1e8d81302d25955ca50a4dd9786496a7f82e12584e57a1fc364736f6c63430008040033";

type TokenFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFactory__factory extends ContractFactory {
  constructor(...args: TokenFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftaddress: PromiseOrValue<string>,
    _erc20address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenFactory> {
    return super.deploy(
      _nftaddress,
      _erc20address,
      overrides || {}
    ) as Promise<TokenFactory>;
  }
  override getDeployTransaction(
    _nftaddress: PromiseOrValue<string>,
    _erc20address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftaddress,
      _erc20address,
      overrides || {}
    );
  }
  override attach(address: string): TokenFactory {
    return super.attach(address) as TokenFactory;
  }
  override connect(signer: Signer): TokenFactory__factory {
    return super.connect(signer) as TokenFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFactoryInterface {
    return new utils.Interface(_abi) as TokenFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenFactory {
    return new Contract(address, _abi, signerOrProvider) as TokenFactory;
  }
}
